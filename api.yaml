openapi: 3.0.0
info:
  description: "An API for H.P. Lovecraft's Works' [Electronic Texts](https://www.hplovecraft.com/writings/texts/)."
  version: 0.1.0
  title: Electronic Texts of H.P. Lovecraftâ€™s Works
  termsOfService: http://swagger.io/terms/
  contact:
    email: giorgi.beriashvili@outlook.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: manuscripts
    description: Collection of manuscripts
paths:
  /manuscripts:
    get:
      tags:
        - manuscripts
      summary: Get all of the manuscripts
      description: Returns all of the manuscripts
      operationId: getManuscripts
      requestBody:
        $ref: "#/components/requestBodies/Manuscripts"
      responses:
        "200":
          description: Manuscripts have been returned successfully
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Manuscripts"
        "400":
          description: Invalid status value
  "/manuscripts/{id}":
    get:
      tags:
        - manuscripts
      summary: Find manuscript by ID
      description: Returns a single manuscript object
      operationId: getManuscriptById
      parameters:
        - name: id
          in: path
          description: ID of manuscript to return
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Manuscript has been returned successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Manuscript"
        "400":
          description: Invalid ID supplied
        "404":
          description: Manuscript not found
externalDocs:
  description: Find out more about the project
  url: https://github.com/GiorgiBeriashvili/lovecraft-api
servers:
  - url: https://localhost:3000/api/v1
components:
  requestBodies:
    Manuscripts:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Manuscripts"
    Entry:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Entry"
    Manuscript:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Manuscript"
  schemas:
    Manuscripts:
      type: array
      items:
        $ref: "#/components/schemas/Entry"
    Entry:
      type: object
      properties:
        id:
          type: integer
          format: int32
        category:
          type: enum
          description: The category of the manuscript
          enum:
            - Fiction
            - Poetry
            - Essay
            - Letter
        title:
          type: string
        description:
          type: string
    Manuscript:
      type: object
      properties:
        id:
          type: integer
          format: int32
        category:
          type: enum
          description: The category of the manuscript
          enum:
            - Fiction
            - Poetry
            - Essay
            - Letter
        title:
          type: string
        content:
          type: string
